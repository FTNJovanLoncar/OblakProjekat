@model IEnumerable<PostData.Post>

@{
    ViewBag.Title = "Lista diskusija";
}

<h2>Diskusije o filmovima</h2>

@if (User.Identity.IsAuthenticated && ViewBag.IsAuthor == true)
{
    <p>
        @Html.ActionLink("Kreiraj novu diskusiju", "Create", "Post", null, new { @class = "btn btn-primary" })
        @Html.ActionLink("Moj profil", "Index", "User", null, new { @class = "btn btn-secondary", style = "margin-left:10px;" })
        @{
            bool isSorted = ViewBag.IsSorted != null && (bool)ViewBag.IsSorted;
            string searchName = ViewBag.SearchName as string ?? "";
            string searchGenre = ViewBag.SearchGenre as string ?? "";
        }

        <div style="display:flex; align-items:center; gap:20px; margin-bottom:20px;">
            <!-- Switch za sortiranje -->
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" id="sortSwitch" @(isSorted ? "checked" : "")>
                <label class="form-check-label" for="sortSwitch">Sortiraj po IMDb oceni</label>
            </div>

            <!-- Forma za pretragu -->
            <form method="get" action="@Url.Action("Index", "Post")" style="display:flex; gap:10px; align-items:center;">
                <input type="text" name="searchName" value="@searchName" class="form-control" placeholder="Naziv filma" />
                <input type="text" name="searchGenre" value="@searchGenre" class="form-control" placeholder="Žanr" />
                <button type="submit" class="btn btn-primary">Pretraži</button>

                <!-- ako je sortiranje uključeno, čuvaj query parametar -->
                @if (isSorted)
                {
                    <input type="hidden" name="sort" value="rating" />
                }
            </form>
        </div>

        <script>
        document.getElementById("sortSwitch").addEventListener("change", function () {
        let url = '@Url.Action("Index", "Post")';
        let params = new URLSearchParams(window.location.search);

        if (this.checked) {
            params.set("sort", "rating");
        } else {
            params.delete("sort");
        }

        // čuvamo i trenutne vrednosti pretrage
        let searchName = params.get("searchName");
        let searchGenre = params.get("searchGenre");

        let finalUrl = url + "?" + params.toString();
        window.location.href = finalUrl;
    });
        </script>


    </p>
}
else if (User.Identity.IsAuthenticated)
{
<p>
    @Html.ActionLink("Moj profil", "Index", "User", null, new { @class = "btn btn-secondary" })
    @{
        bool isSorted = ViewBag.IsSorted != null && (bool)ViewBag.IsSorted;
        string searchName = ViewBag.SearchName as string ?? "";
        string searchGenre = ViewBag.SearchGenre as string ?? "";
    }

    <div style="display:flex; align-items:center; gap:20px; margin-bottom:20px;">
        <!-- Switch za sortiranje -->
        <div class="form-check form-switch">
            <input class="form-check-input" type="checkbox" id="sortSwitch" @(isSorted ? "checked" : "")>
            <label class="form-check-label" for="sortSwitch">Sortiraj po IMDb oceni</label>
        </div>

        <!-- Forma za pretragu -->
        <form method="get" action="@Url.Action("Index", "Post")" style="display:flex; gap:10px; align-items:center;">
            <input type="text" name="searchName" value="@searchName" class="form-control" placeholder="Naziv filma" />
            <input type="text" name="searchGenre" value="@searchGenre" class="form-control" placeholder="Žanr" />
            <button type="submit" class="btn btn-primary">Pretraži</button>

            <!-- ako je sortiranje uključeno, čuvaj query parametar -->
            @if (isSorted)
            {
                <input type="hidden" name="sort" value="rating" />
            }
        </form>
    </div>

    <script>
    document.getElementById("sortSwitch").addEventListener("change", function () {
        let url = '@Url.Action("Index", "Post")';
        let params = new URLSearchParams(window.location.search);

        if (this.checked) {
            params.set("sort", "rating");
        } else {
            params.delete("sort");
        }

        // čuvamo i trenutne vrednosti pretrage
        let searchName = params.get("searchName");
        let searchGenre = params.get("searchGenre");

        let finalUrl = url + "?" + params.toString();
        window.location.href = finalUrl;
    });
    </script>


</p>
}
else
{
    <p>
        @Html.ActionLink("Prijavite se", "Login", "User", null, new { @class = "btn btn-info" })
    </p>
}

@if (Model == null || !Model.Any())
{
    <p>Trenutno nema diskusija za prikaz.</p>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Slika</th>
                <th>Ime filma</th>
                <th>Žanr</th>
                <th>Datum izlaska</th>
                <th>IMDb ocena</th>
                <th>Radnja</th>
                <th>Trajanje</th>
                <th>Akcije</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var post in Model)
            {
                <tr>
                    <td>
                        @if (!string.IsNullOrEmpty(post.ImageUrl))
                        {
                            <img src="@post.ImageUrl" alt="Post Image" style="width:50px; height:50px; border-radius:5px;" />
                        }
                        else
                        {
                            <span>Nema slike</span>
                        }
                    </td>
                    <td>@post.Name</td>
                    <td>@post.Genre</td>
                    <td>@post.ReleaseDate.Date.ToShortDateString()</td>
                    <td>@post.IMDBRating</td>
                    <td>@post.Synopsis</td>
                    <td>@post.Duration</td>
                    <td>
                        @if (ViewBag.IsAuthor == true && post.AuthorEmail?.ToLower() == User.Identity.Name.ToLower())
                        {
                            <!-- AUTOR: samo Izmeni i Obriši -->
                            @Html.ActionLink("Izmeni", "Edit", "Post", new { id = post.RowKey }, new { @class = "btn btn-warning btn-sm" })
                            @Html.Raw("&nbsp;")
                            <form action="@Url.Action("Delete", "Post")" method="post" style="display:inline;" onsubmit="return confirm('Da li ste sigurni da želite da obrišete ovu diskusiju?');">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@post.RowKey" />
                                <button type="submit" class="btn btn-danger btn-sm">Obriši</button>
                            </form>
                        }
                        else
                        {

                            <!-- Glasanje - Pozitivno -->
                            <form action="@Url.Action("Upvote", "Post")" method="post" style="display:inline;">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="postId" value="@post.RowKey" />
                                <button type="submit" class="btn-like">Pozitivno (@post.PositiveVotes)</button>
                            </form>

                            <!-- Glasanje - Negativno -->
                            <form action="@Url.Action("Downvote", "Post")" method="post" style="display:inline;">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="postId" value="@post.RowKey" />
                                <button type="submit" class="btn-dislike">Negativno (@post.NegativeVotes)</button>
                            </form>

                            <!-- Praćenje diskusije -->
                            <form action="@Url.Action("ToggleFollow", "Post")" method="post" style="display:inline;">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="postId" value="@post.RowKey" />
                                <button type="submit" class="btn btn-info btn-sm">
                                    @(post.IsFollowedByCurrentUser ? "Otprati diskusiju" : "Prati diskusiju")
                                </button>
                            </form>

                            @Html.Raw("&nbsp;")
                            @Html.ActionLink("Ostavi komentar", "Comments", "Post", new { id = post.RowKey }, new { @class = "btn btn-secondary btn-sm" })
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
